---
title: Using Compliance Scanner for PCF
owner: Pivotal Compliance and Innovation (PCI) Team
---

<strong><%= modified_date %></strong>

This topic describes how to use <%= vars.product_full %>.

<%= vars.product_short %> performs one errand that starts scanning.
When this errand is triggered, it starts the scanning errand on each VM, including the `oscap_store`
VM that the tile creates.

The scanning errand is set to `Off` by default. This is because <%= vars.product_short %> only scans
tiles that are already present when you deploy it.
If you install other tiles during the same time <%= vars.product_short %> is installed,
the additional tiles are not scanned.

The scan errand on each VM does generate the Security Content Automation Protocol (SCAP)
tests each time by running XGen on XFiles.


## <a id='scan-methods'></a> Ways to Scan VMs

You can scan VMs using the tile UI or the command line:

* When performing an audit, see [Scan Using the <%= vars.product_short %> Tile](#tile-scan).
* When setting up automated scans of your VMs, see [Scan Using the Command Line](#terminal-scan).


## <a id='tile-scan'></a> Scan Using the <%= vars.product_short %> Tile
Scanning VMs involves three procedures:

1. [Scan the VMs](#scan-vms)
1. [Retrieve Log Files](#review-tile)
1. [Find Scan Output](#scan-output)

### <a id='scan-vms'></a> Scan the VMs

To begin scanning:

1. Confirm that your scan is configured correctly with the benchmarks and log formats you want output.

    For more information about configuring your scan,
    see [Configure Scans](./installing.html#scan).

1. Navigate to the Ops Manager Installation Dashboard.

1. Click **REVIEW PENDING CHANGES**.

1. Enable the checkboxes for the <%= vars.product_short %> tile and the **Run configured scans** errand.

    ![Review pending changes page with Compliance Scanner for PCF selected and Run configured scans
    errand selected](review-pending-changes.png)

    A scan is triggered at the end.

    <p class="note"><strong>Note: </strong> If there are changes from add-ons or tiles other than
      <%= vars.product_short %>, leave those products and errands checkboxes enabled if
      you want those changes to be applied.
     If there are no changes from other sources, Pivotal recommends unchecking the PAS tile.</p>

1. Click **APPLY CHANGES**.

    When scanning is finished, a second errand is triggered by the `Run-config-scans-on-PAS` errand
    to retrieve the logs from each VM.
    On each VM, there is only one log file per format and one ZIP log file at a time.
    If you run any subsequent scans these files are overwritten.


### <a id='review-tile'></a>Retrieve Log Files

<p class="note"><strong>Note:</strong>  When an S3 bucket is configured, the log files do not contain
  the scan output. For instructions on accessing the scan output when an S3 bucket is configured,
  see <a href="#scan-output-s3">Scan Output - S3</a> below.
  For instructions on configuring an S3 bucket, see <a href="./installing.html#s3">Installing and Configuring</a>.</p>

To review the logs for a completed scan using the <%= vars.product_short %> tile:

1. When the changes have been applied, return to the Installation Dashboard
   and click the <%= vars.product_short %> tile.

    ![dialog at the end of apply changes](changes-applied.png)

1. Click **Status** and download the `oscap_store` log file.

    This downloads the log file containing scan results from the `oscap_store` VM to Ops Manager.
    If you select the download icon multiple times, a list of ZIP files is created in Ops Manager,
    each with a different timestamp.

1. Click **Logs** and click the filename of the ZIP log file.

    This downloads the scan results from the Ops Manager to your local machine.

	![The logs pane from where the zipped scan logs can be downloaded](download-logs.png)

    The timestamp indicates when the scan was initiated.

1. Decompress the downloaded file.

    The contents of the downloaded file depend on the formats and benchmarks you selected during
    configuration.
    For example, a report in HTML format from the Base Xenial benchmark, might look like this.

    ![HTML report header](sample-html-output.png)


    <a href="base_xenial_sample.html" target="_blank">See a larger version of this image.</a>

### <a id='scan-output'></a> Find Scan Output

The method of finding the scan output depends on whether or not an S3 bucket is configured for scan results.
For instructions on configuring an S3 bucket, see <a href="./installing.html#s3">Installing and Configuring</a>.


  * Scan Output for a Configured S3 Bucket

    * Scan output is uploaded to the configured bucket as an archive.
    * The scan output filename contains the timestamp of the scan and takes the form
    <code>compliance\_scanner\_YYYY-MM-DDTHHMMSS.tar.gz</code>.
    * To retrieve the scan results, download and extract this archive.

  * Scan Output for a Non-configured S3 Bucket

    * The `oscap_store` ZIP file contains scan results from the `oscap_store` VM.
    * The results of the scan are at `oscap_store/scanner/scan_results/output`.

The scan output format is not affected by where it was fetched from, be it an S3 bucket or logs.

  The naming syntax for each log file is below:

  ```
  BENCHMARK_COMPONENT_UUID.FORMAT
  ```

  Where:

  + `BENCHMARK` is the benchmark that was used for the scan.
  + `COMPONENT` is the VM that was scanned.
  + `UUID` is the UUID for the VM that was scanned.
  + `FORMAT` is the format of the file.

  For example, the `oscap_store` directory looks similar to the following image:

  ![oscap_store file structure](oscap_store.png)

<!-- If you need to edit the above image you need to edit the corresponding
oscap_store.html file in draw.io and then export the image to a png file. -->

The number of log files in the `output` directory can be calculated as follows:

  ```
  (v + i) * f * b
  ```

  Where:

  + `v` is the number of VMs in your PCF deployment.
  + `i` is the number of additional instances for any VM in your PCF deployment.
  + `f` is the number of formats you configured in [Configure Scans](./installing.html#scan).
  + `b` is the number of benchmarks you configured in [Configure Scans](./installing.html#scan).


## <a id='terminal-scan'></a>Scan Using the Command Line

You also have the option of scanning VMs through the CLI.
There are two ways to do this:

* [Scan and Retrieve Log Files](#scan-retrieve-logs)
* [Retrieve Existing Log Files](#retrieve-only-logs)


### <a id='scan-retrieve-logs'></a>Scan and Retrieve Log Files

To start a new scan and retrieve the logs for the completed scan using the CLI:

1. Log in to the BOSH Director.
    1. On the Ops Manager VM, create an alias in the BOSH CLI for your BOSH Director IP address. For example:
    <pre class="terminal">$ bosh alias-env my-env -e 10.0.0.3</pre>
    1. Log in to the BOSH Director, specifying the newly created alias.
    For example:
    <pre class="terminal">$ bosh -e my-env log-in</pre>
1. Run `bosh deployments` to list all the deployment names.
  For example:
  <pre class="terminal">
  Name                      Release(s)                    Stemcell(s)
  pivotal-container-service backup-and-restore-sdk/1.8.0  bosh-google-kvm-ubuntu-xenial-go\_agent/97.47   -
                              bosh-dns/1.10.0
                              bosh-dns-aliases/0.0.3
                              bpm/0.6.0
                              cf-mysql/36.14.0
                              docker/32.0.3
                              kubo/0.21.13
                              kubo-service-adapter/1.2.5
                              oscap/0.1.61
                              pks-telemetry/0.9.4
  scanner-f9822a33c2e0d04cb bosh-dns/1.10.0               bosh-google-kvm-ubuntu-xenial-go\_agent/170.19  -
                              bosh-dns-aliases/0.0.3
                              clamav/1.4.41
                              ipsec/1.9.14
                              ipsec-verifier/1.9.14
                              oscap/0.1.61
  service-instance          bosh-dns/1.10.0               bosh-google-kvm-ubuntu-xenial-go\_agent/97.47
                              bosh-dns-aliases/0.0.3        pivotal-container-service
                              bpm/0.6.0
                              cfcr-etcd/1.4.1
                              kubo/0.21.13
  </pre>

1. Find the `scanner` deployment in the list.
  It appears as `scanner-DEPLOYMENT-UUID`, where `DEPLOYMENT-UUID` is the UUID of your deployment.
1. Run the following command to start the scan and download the logs:

  ```
  bosh -e my-env -d scanner-DEPLOYMENT-UUID run-errand scan_results --download-logs --logs-dir PATH-TO-SAVE-SCAN-RESULTS
  ```

  Where:

  * `scanner-DEPLOYMENT-UUID` is the name of your scanner deployment.
  * `PATH-TO-SAVE-SCAN-RESULTS` is the directory where you want to save the logs.
  You can omit `--logs-dir PATH-TO-SAVE-SCAN-RESULTS` if you want the logs to be saved to your current directory.

  For example:
  <pre class="terminal">bosh -e my-env -d scanner-f9822a33c2e0d04cb run-errand scan_results --download-logs --logs-dir scanner/logs/20190131</pre>

  <p class="note"><strong>Note:</strong>
  The files generated use the most recent configuration of your tile.
  To see what the current settings are, see <a href="./installing.html#scan">Configure Scans</a>.</p>


### <a id='retrieve-only-logs'></a>Retrieve Existing Log Files

To retrieve existing logs for the most recent completed scan using the CLI, run:

  ```
  bosh -e my-env -d scanner-DEPLOYMENT-UUID logs --only=scan_results --dir PATH-TO-SAVE-SCAN-RESULTS
  ```
  Where:

  * `scanner-DEPLOYMENT-UUID` is the name of your scanner deployment.
  * `PATH-TO-SAVE-SCAN-RESULTS` is the directory in which you save your logs.
  Omit `--dir PATH-TO-SAVE-SCAN-RESULTS` to save the logs to your current directory.

  For example:
  <pre class="terminal">bosh -e my-env -d scanner-f9822a33c2e0d04cb logs --only=scan_results --dir scanner/logs/20190131</pre>


### <a id='access-logs'></a>Access Log Files
To access your saved logs, unzip the output ZIP file.

The naming syntax for each log file is below:

  ```
  BENCHMARK_COMPONENT_UUID.FORMAT
  ```
  Where:

  * `BENCHMARK` is the benchmark that was used for the scan.
  * `COMPONENT` is the VM that was scanned.
  * `UUID` is the UUID for the VM that was scanned.
  * `FORMAT` is the format of the file.

  For example, the `output` directory looks similar to the following image:

  ![output folder structure](command_line_output.png)


<!-- Put below "View Tests on VMs" section in a "Reporting" page in the future -->
## <a id='tests'></a> View Tests on VMs

For every configuration rule that is checked, there is a corresponding test written in YAML test
files residing on each VM.
You can use these files as reference for internal test development or to validate that the test
matches the description.

In the beta release of <%= vars.product_short %>,
you cannot write your own YAML tests or convert these tests to the SCAP format.

To view tests on VMs:

1. Use the BOSH CLI to SSH into a component VM. For more information,
see [BOSH SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh).
1. Navigate to the following path:

    ```
    /var/vcap/packages/oscap/xfiles
    ```

1. Search for the test ID and open the corresponding file.
